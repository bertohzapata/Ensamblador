ASSUME CS:CODIGO, DS:DATOS, SS:PILA

;DADO UN VECTOR DE 10 (O MÁS) ELEMENTOS DE 16 BITS CADA UNO DETERMINE QUÉ ELEMENTO ES EL MÁXIMO DE LA LISTA E IMPRIMIR EL RESULTADO EN HEXADECIMAL:
;EN ESTE CASO, DE ELEMENTOS DE 16 BITS, EL INCREMENTO DE BX VA DE 2 EN 2.
;(La lógica de este programa está en el cuaderno)

;NOTA: 	- UN VECTOR EN ENSAMBLADOR SE PUEDE HACER DE DOS FORMAS: COMO LA QUE SE HIZO EN ESTE CÓDIGO O COMO 
;		LA QUE SE HACE EN EL CÓDIGO ALMVEC.ASM
;		- ESTE CÓDIGO TAMBIÉN FUNCIONA CON ELEMENTOS DE 8 BITS.

CODIGO SEGMENT	
	MOV AX,DATOS
	MOV DS,AX
	
	MOV BX, 0
	MOV CX, 9				;EL CICLO FOR SERÍA: TAMAÑO DEL VECTOR-1.
	MOV DX, VECTOR[BX]		;EL RESULTADO O NÚMERO MAYOR DEL VECTOR SE ALMACENA EN LA PARTE BAJA DE DX.
CICLO:
	CMP DX, VECTOR[BX+2]	;EL INCREMENTO DE BX VA DE 2 EN 2.
	JAE ETIQ1				;EL MAYOR O IGUAL ES PARA QUE SE PUEDA INCLUIR LAS REPETICIONES DEL NÚMERO MAYOR SIN AFECTAR EL RESULTADO.
	MOV DX, VECTOR[BX+2]
ETIQ1:
	ADD BX, 2				;EL INCREMENTO DE BX VA DE 2 EN 2.
	LOOP CICLO
	MOV H, DX				;LA VARIABLE H TOMA EL VALOR DE DL (DONDE ESTÁ ALMACENADO EL RESULTADO).
	CALL TRANSFORMAR
	MOV AH, 4CH
	INT 21H     
			
			;PREVIAMENTE EL VALOR A CONVERTIR DEBE DE ESTAR ALMENADO EN LA VARIABLE H:
			TRANSFORMAR PROC
				MOV AH, 09H
				LEA DX, MENSAJE
				INT 21H
				MOV DX, H			
				AND DX, A			;EL AND HACE QUE LOS DEMÁS DÍGITOS SE VUELVAN CERO Y SÓLO QUEDE EL DÍGITO DE LA POSICIÓN QUE SE DESEA IMPRIMIR.
				ROR DX, 12			;SE HACE LA ROTACIÓN PARA QUE EL DÍGITO QUE SE DESEA IMPRIMIR QUEDE JUSTO EN LA ESQUINA DERECHA, PARTE BAJA DE DX.
				CALL IMPRIMIR_HEXADECIMAL
				MOV DX, H			
				AND DX, B
				ROR DX, 8
				CALL IMPRIMIR_HEXADECIMAL
				MOV DX, H			
				AND DX, D
				ROR DX, 4
				CALL IMPRIMIR_HEXADECIMAL
				MOV DX, H			
				AND DX, E
				;ROR DX, 0			;LA ROTACIÓN DE BITS A LA DERECHA VA DECREMENTANDO DE 4 EN 4.
				CALL IMPRIMIR_HEXADECIMAL
				RET
			TRANSFORMAR ENDP
	
			;SUBRUTINA QUE IMPRIME UN NÚMERO EN HEXADECIMAL 
			IMPRIMIR_HEXADECIMAL PROC		
				CMP DX, 09H
				JG IMP1
				ADD DX, 30H			;EN EL CASO QUE SE DEBA IMPRIMIR UN DÍGITO ENTRE 0 Y 9.
				JMP IMP2
			IMP1:
				ADD DL, 37H			;EN EL CASO QUE SE DEBA IMPRIMIR UN DÍGITO ENTRE A Y F.
			IMP2:
				MOV AH, 2H
				INT 21H
				RET
			IMPRIMIR_HEXADECIMAL ENDP
CODIGO ENDS

PILA SEGMENT STACK
	DW 32 DUP (0)
PILA ENDS

DATOS SEGMENT
;VECTOR DE TAMAÑO 10:
VECTOR DW 15698, 21563, 47520, 65100, 120, 15478, 12, 14752, 65110, 10
H DW 0H							;EN H SE ALMACENARÁ EL NÚMERO A MOSTRAR POR PANTALLA.
A DW 0F000H
B DW 00F00H
D DW 000F0H
E DW 0000FH
MENSAJE DB "EL RESULTADO ES: $"
DATOS ENDS

END
